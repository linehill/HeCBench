#===============================================================================
# User Options
#===============================================================================

# Compiler can be set below, or via environment variable
CC        = hipcc
OPTIMIZE  = yes
DEBUG     = no

#===============================================================================
# Program name & source code list
#===============================================================================

program = main

obj = main.o io.o process.o

#===============================================================================
# Sets Flags
#===============================================================================

# Standard Flags
CFLAGS := $(EXTRA_CFLAGS) -std=c++14 -I../cm-cuda

# Compilation flags for clang-based platforms (amd, chipstar).
ifeq ($(findstring $(HIP_PLATFORM), nvidia nvcc),)
  CFLAGS += -Wall
endif

# Linker Flags
LDFLAGS = 

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g -DDEBUG
  LDFLAGS  += -g
endif

# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif
#===============================================================================
# Targets to Build
#===============================================================================

$(program): $(obj) Makefile
	$(CC) $(CFLAGS) $(obj) -o $@ $(LDFLAGS)

main.o: ../cm-cuda/main.cpp ../cm-cuda/utils.h Makefile
	$(CC) -x hip $(CFLAGS) -c $< -o $@

io.o: ../cm-cuda/io.cpp ../cm-cuda/utils.h Makefile
	$(CC) -x hip $(CFLAGS) -c $< -o $@

process.o: process.cu ../cm-cuda/kernels.h ../cm-cuda/utils.h Makefile
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	rm -rf $(program) $(obj)

run: $(program)
	./$(program)
